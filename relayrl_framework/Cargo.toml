# Package metadata and basic configuration for the relayrl_framework crate.
[package]
name = "relayrl_framework"                 # The name of the package.
version = "0.4.5"                         # Current version of the package.
authors = ["jrcalgo", "jacksonr121@outlook.com"]                      # List of authors.
edition = "2024"                          # Rust edition being used.
description = "A system-oriented reinforcement learning framework using a Rust backend with Python interfaces."  # Brief description.
readme = "README.md"                      # Path to the README file.
keywords = ['reinforcement', 'learning', 'rl-framework', 'client-server', 'system-integration']  # Keywords for discovery.
categories = ['science', 'simulation', 'asynchronous', 'network-programming']  # Crates.io categories.
license = "MIT"                           # License identifier.

# documentation configuration.
[package.metadata.docs.rs]
all-features = true

# Library configuration.
[lib]
name = "relayrl_framework"                 # Name of the library.
crate-type = ["rlib", "cdylib"]                   # Generate a cdylib for FFI (e.g., for Python bindings). rlib is the default library type.

# Optional features.
[features]
default = ["full"]       # Enables default and necessary features for operation in Rust.
full = ["networks", "data_types", "python_bindings"]       # Enables all supported features.
networks = ["grpc_network", "zmq_network"]         # Enables networking modules with their accompanying python IPC.
grpc_network = ["tonic", "prost", "tonic-build", "pyo3", "data_types"]        # Enables gRPC messaging support between agents and training server.
zmq_network = ["zmq", "pyo3", "data_types"]           # Enables ZeroMQ messaging support between agents and training server.
data_types = []          # Enables training data medium used in RelayRL; compiles trajectory and action types.
python_ipc_channel = ["pyo3"]       # ***Currently unused; meant to abstract out pyo3 from networking modules.***
python_bindings = ["networks"]       # Enables Python bindings of relayrl_framework for export availability.
profile = ["flamegraph", "console-subscriber"]       # Enables runtime profiling support via flamegraph.

# Dependencies required at runtime.
[dependencies]
zmq = { version = "0.10.0", optional = true }                               # ZeroMQ messaging library.
tonic = { version = "0.12.3", optional = true }                             # gRPC library for Rust.
prost = { version = "0.13.5", optional = true }                             # Protobuf serialization library for tonic.
tch = { version = "0.18.1", features=["download-libtorch", "python-extension"] }  # Torch library with Python extension support.
safetensors = "0.5.3"                       # Library for tensor serialization.
tokio = { version = "1.44.2", features = ["full"] }  # Asynchronous runtime.
once_cell = "1.20.2"              # Lazy initialization of static data.
tempfile = "3.17.1"               # For temporary file creation.
serde = { version = "1.0.215", features = ["derive"] }  # Serialization framework with derive macros.
serde_json = "1.0.133"          # JSON serialization.
serde-pickle = "1.2.0"                        # Serialization using the pickle format.
bytemuck = "1.20.0"               # Safe zero-copy conversion between data representations.
rand = "0.8.5"          # Random number generation library.

# Build dependencies (used during compilation).
[build-dependencies]
pyo3-build-config = "0.24.2"
tonic-build = { version = "0.12.3", optional = true }       # Used to compile protobuf files with tonic.

# Python bindings.
[dependencies.pyo3]
version = "0.24.2"                # Version of the pyo3 crate for Python interop.
default-features = false
features = ["extension-module", "experimental-async"]
optional = true

# Optional dependency for flamegraph support.
[dependencies.flamegraph]
version = "0.6.7"
optional = true

# Optional dependency for tokio-console support.
# cargo install tokio-console, then listen on CLI
# To trace, ensure -> RUSTFLAGS="--cfg tokio_unstable"
[dependencies.console-subscriber]
version = "0.4.1"
optional = true

# Essential for benchmarking
[dev-dependencies.criterion]
version = "0.5.1"
features = ["html_reports", "async_tokio"]

# Benchmarks network inference, latency, and throughput
[[bench]]
name = "network_benchmarks"
harness = false

#
#[[bench]]
#name = "runtime_benchmarks"
#harness = false
#
#[[bench]]
#name = "o3_network_benchmarks"
#harness = false
#
#[[bench]]
#name = "o3_runtime_benchmarks"
#harness = false

# Development build profile.
[profile.dev]
opt-level = 0                                # No optimizations for quicker compile times and easier debugging.
debug = true                                 # Include debug symbols.

# Release build profile.
[profile.release]
opt-level = 3                                # High optimization level for runtime performance.
debug = true                                 # Include debug symbols in release builds for troubleshooting.